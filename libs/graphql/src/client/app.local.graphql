type PointRef {
  latitude: Int
  longitude: Int
}

type BathroomDetails {
  full: Int
  half: Int
  toiletOnly: Boolean
}

type ImageRef {
  altText: String!
  c6_uri: String!
  c9_uri: String!
}

type MapViewport {
  neLat: Int
  neLong: Int
  swLat: Int
  swLong: Int
}

type SearchItem {
  listingId: String!
  sleeps: Int!
  relevance: Int!
  description: String!

  bathrooms: BathroomDetails

  bedrooms: Int
  noOfOccupants: Int
  geoCode: PointRef!
  mapViewport: MapViewport
  images: ImageRef
  # This will store ratings
  ratingValue: Int
  # This will store total Int of ratings
  ratingCount: Int
  averageRating: Int
  reviewCount: Int
  queryUUID: String
  headline: String
}

interface SearchResultList {
  fromRecord: Int!
  toRecord: Int!
  pageSize: Int!
  pageCount: Int!
  page: Int!
  resultCount: Int!
  listings: [SearchItem]!
}

type MinMaxInt {
  min: Int
  max: Int
}

interface MapPoint {
  lat: Int
  lng: Int
}

type DrawingBox {
  neLat: Int
  neLng: Int
  swLat: Int
  swLng: Int
}

type Query {
  activeListingId: String @client
  mapCenter: MapPoint @client
  showFilters: Boolean @client
  queryString: String! @client
  currentPage: Int @client
  drawBounds: DrawingBox @client
  search(request: SearchResultRequest!): SearchResultList
}

input PageInput {
  page: Int!
  pageSize: Int!
}

#TODO:: need to check possible values
input FilterInput {
  testFilter: Int
}

input CoreFilterInput {
  maxBathrooms: Int
  maxBedrooms: Int
  maxNightlyPrice: Int
  maxTotalPrice: Int
  minTotalPrice: Int
  minBathrooms: Int
  minBedrooms: Int
  minNightlyPrice: Int
  pets: Int
}

# TODO:: This will be used when scrolling the map or drawing over the map
input BoundingBoxInput {
  maxLat: Int
  maxLng: Int
  minLat: Int
  minLng: Int
}

# this is the request required
input SearchResultRequest {
  paging: PageInput
  filterVersion: String
  filters: [FilterInput]!
  coreFilters: CoreFilterInput!
  boundingBox: BoundingBoxInput
  # This must be there
  q: String!
}

type Mutation {
  hoverSearch(searchId: String!): SearchItem
}
